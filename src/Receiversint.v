/* Generated by Yosys 0.7 (git sha1 61f6811, i686-w64-mingw32.static-gcc 4.9.3 -Os) */

`include "cmos_cells.v"

(* src = "Receiver.v:8" *)
module Receiversynt(CLK, RESET_PLL, IN_SERIAL, RESET_SP, RESET_CONV, OUT_CONV);
  (* src = "Receiver.v:11" *)
  input CLK;
  (* src = "Receiver.v:12" *)
  wire CLK_CONV;
  (* src = "Receiver.v:12" *)
  wire CLK_PS;
  (* src = "Receiver.v:11" *)
  input IN_SERIAL;
  (* src = "Receiver.v:16" *)
  output [31:0] OUT_CONV;
  (* src = "Receiver.v:13" *)
  wire [7:0] OUT_DEC;
  (* src = "Receiver.v:14" *)
  wire [9:0] OUT_PARALELO;
  (* src = "Receiver.v:12" *)
  wire OUT_RDM;
  (* src = "Receiver.v:11" *)
  input RESET_CONV;
  (* src = "Receiver.v:11" *)
  input RESET_PLL;
  (* src = "Receiver.v:11" *)
  input RESET_SP;
  (* src = "Receiver.v:27" *)
  convertidor8_32s conv8_32 (
    .CLK(CLK_CONV),
    .ENB(RESET_CONV),
    .in(OUT_DEC),
    .out(OUT_CONV)
  );
  (* src = "Receiver.v:25" *)
  decoders dec (
    .in_10b(OUT_PARALELO),
    .out_8b(OUT_DEC)
  );
  (* src = "Receiver.v:19" *)
  PLLs pll_rx (
    .CLK(CLK),
    .CLK_10(CLK_CONV),
    .CLK_5(CLK_PS),
    .reset(RESET_PLL)
  );
  (* src = "Receiver.v:21" *)
  Syncs rdm (
    .CLK(CLK_PS),
    .IN_Data(IN_SERIAL),
    .OUT_Data(OUT_RDM)
  );
  (* src = "Receiver.v:23" *)
  serialparalelos sp (
    .CLOCK(CLK_PS),
    .ENABLE(RESET_SP),
    .IS(OUT_RDM),
    .OP(OUT_PARALELO)
  );
endmodule

(* src = "PLL.v:1" *)
module PLLs(CLK, reset, CLK_5, CLK_10);
  (* src = "PLL.v:11" *)
  wire _000_;
  (* src = "PLL.v:11" *)
  wire [3:0] _001_;
  (* src = "PLL.v:11" *)
  wire [3:0] _002_;
  (* src = "PLL.v:11" *)
  wire [3:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  (* src = "PLL.v:22" *)
  wire [3:0] _045_;
  wire [1:0] _046_;
  wire [1:0] _047_;
  wire _048_;
  wire [3:0] _049_;
  wire _050_;
  (* src = "PLL.v:27" *)
  wire _051_;
  wire [3:0] _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [3:0] _056_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [3:0] _057_;
  wire [3:0] _058_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _059_;
  (* src = "<techmap.v>:260|<techmap.v>:221" *)
  wire _060_;
  (* src = "<techmap.v>:260|<techmap.v>:222" *)
  wire _061_;
  (* src = "PLL.v:3" *)
  input CLK;
  (* src = "PLL.v:5" *)
  output CLK_10;
  (* src = "PLL.v:4" *)
  output CLK_5;
  (* src = "PLL.v:7" *)
  wire [3:0] cont;
  (* src = "PLL.v:3" *)
  input reset;
  NOT _062_ (
    .A(_005_),
    .Y(_008_)
  );
  NOT _063_ (
    .A(_006_),
    .Y(_009_)
  );
  NOR _064_ (
    .A(_009_),
    .B(_008_),
    .Y(_007_)
  );
  NOT _065_ (
    .A(_043_),
    .Y(_010_)
  );
  NOT _066_ (
    .A(_044_),
    .Y(_011_)
  );
  NOR _067_ (
    .A(_011_),
    .B(_010_),
    .Y(_012_)
  );
  NOR _068_ (
    .A(_012_),
    .B(_004_),
    .Y(_013_)
  );
  NOR _069_ (
    .A(_013_),
    .B(_042_),
    .Y(_014_)
  );
  NOT _070_ (
    .A(_042_),
    .Y(_015_)
  );
  NOR _071_ (
    .A(_015_),
    .B(_004_),
    .Y(_016_)
  );
  NAND _072_ (
    .A(_016_),
    .B(_011_),
    .Y(_017_)
  );
  NAND _073_ (
    .A(_017_),
    .B(_006_),
    .Y(_018_)
  );
  NOR _074_ (
    .A(_018_),
    .B(_014_),
    .Y(_024_)
  );
  NOR _075_ (
    .A(_017_),
    .B(_010_),
    .Y(_019_)
  );
  NAND _076_ (
    .A(_017_),
    .B(_010_),
    .Y(_020_)
  );
  NAND _077_ (
    .A(_020_),
    .B(_006_),
    .Y(_021_)
  );
  NOR _078_ (
    .A(_021_),
    .B(_019_),
    .Y(_026_)
  );
  NOR _079_ (
    .A(_016_),
    .B(_044_),
    .Y(_022_)
  );
  NAND _080_ (
    .A(_016_),
    .B(_010_),
    .Y(_023_)
  );
  NAND _081_ (
    .A(_023_),
    .B(_006_),
    .Y(_025_)
  );
  NOR _082_ (
    .A(_025_),
    .B(_022_),
    .Y(_027_)
  );
  NOT _083_ (
    .A(_004_),
    .Y(_028_)
  );
  NOR _084_ (
    .A(_009_),
    .B(_028_),
    .Y(_029_)
  );
  NOT _085_ (
    .A(_031_),
    .Y(_030_)
  );
  NAND _086_ (
    .A(_006_),
    .B(_044_),
    .Y(_032_)
  );
  NOR _087_ (
    .A(_032_),
    .B(_023_),
    .Y(_033_)
  );
  NAND _088_ (
    .A(_033_),
    .B(_030_),
    .Y(_034_)
  );
  NAND _089_ (
    .A(_015_),
    .B(_028_),
    .Y(_035_)
  );
  NOR _090_ (
    .A(_044_),
    .B(_043_),
    .Y(_037_)
  );
  NAND _091_ (
    .A(_037_),
    .B(_006_),
    .Y(_038_)
  );
  NOR _092_ (
    .A(_038_),
    .B(_035_),
    .Y(_039_)
  );
  NOR _093_ (
    .A(_033_),
    .B(_030_),
    .Y(_040_)
  );
  NOR _094_ (
    .A(_040_),
    .B(_039_),
    .Y(_041_)
  );
  NAND _095_ (
    .A(_041_),
    .B(_034_),
    .Y(_036_)
  );
  DFF _096_ (
    .C(CLK),
    .D(_000_),
    .Q(CLK_10)
  );
  DFF _097_ (
    .C(CLK),
    .D(_001_[0]),
    .Q(cont[0])
  );
  DFF _098_ (
    .C(CLK),
    .D(_001_[1]),
    .Q(cont[1])
  );
  DFF _099_ (
    .C(CLK),
    .D(_001_[2]),
    .Q(cont[2])
  );
  DFF _100_ (
    .C(CLK),
    .D(_001_[3]),
    .Q(cont[3])
  );
  assign _004_ = cont[3];
  assign _042_ = cont[0];
  assign _043_ = cont[1];
  assign _044_ = cont[2];
  assign _005_ = CLK;
  assign _006_ = reset;
  assign CLK_5 = _007_;
  assign _001_[0] = _024_;
  assign _001_[1] = _026_;
  assign _001_[2] = _027_;
  assign _001_[3] = _029_;
  assign _031_ = CLK_10;
  assign _000_ = _036_;
endmodule

(* src = "RDM.v:1" *)
module Syncs(CLK, IN_Data, OUT_Data);
  (* src = "RDM.v:3" *)
  input CLK;
  (* src = "RDM.v:3" *)
  input IN_Data;
  (* src = "RDM.v:4" *)
  output OUT_Data;
  DFF _0_ (
    .C(CLK),
    .D(IN_Data),
    .Q(OUT_Data)
  );
endmodule



(* src = "convertidor832.v:1" *)
module convertidor8_32s(in, out, ENB, CLK);
  (* src = "convertidor832.v:14" *)
  wire [31:0] _000_;
  (* src = "convertidor832.v:14" *)
  wire [23:0] _001_;
  (* src = "convertidor832.v:14" *)
  wire [7:0] _002_;
  (* src = "convertidor832.v:14" *)
  wire [7:0] _003_;
  (* src = "convertidor832.v:14" *)
  wire [7:0] _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  wire _284_;
  wire _285_;
  wire _286_;
  wire _287_;
  wire _288_;
  wire _289_;
  wire _290_;
  wire _291_;
  wire _292_;
  wire _293_;
  wire _294_;
  wire _295_;
  wire _296_;
  wire _297_;
  wire _298_;
  wire _299_;
  wire _300_;
  wire _301_;
  wire _302_;
  wire _303_;
  wire _304_;
  wire _305_;
  wire _306_;
  wire _307_;
  wire _308_;
  wire _309_;
  wire _310_;
  wire _311_;
  wire _312_;
  wire _313_;
  wire _314_;
  wire _315_;
  wire _316_;
  wire _317_;
  wire _318_;
  wire _319_;
  wire _320_;
  wire _321_;
  wire _322_;
  wire _323_;
  wire _324_;
  wire _325_;
  wire _326_;
  wire _327_;
  wire _328_;
  wire [3:0] _329_;
  wire _330_;
  wire [23:0] _331_;
  wire [23:0] _332_;
  wire [23:0] _333_;
  wire [7:0] _334_;
  wire [7:0] _335_;
  wire [7:0] _336_;
  wire [7:0] _337_;
  wire [7:0] _338_;
  wire [7:0] _339_;
  (* src = "convertidor832.v:2" *)
  input CLK;
  (* src = "convertidor832.v:3" *)
  input ENB;
  (* onehot = 32'd1 *)
  wire [3:0] bits;
  (* src = "convertidor832.v:4" *)
  input [7:0] in;
  (* src = "convertidor832.v:5" *)
  output [31:0] out;
  (* src = "convertidor832.v:7" *)
  wire [31:0] part;
  (* src = "convertidor832.v:8" *)
  wire [7:0] temp;
  NOT _340_ (
    .A(_323_),
    .Y(_017_)
  );
  NOT _341_ (
    .A(_325_),
    .Y(_019_)
  );
  NAND _342_ (
    .A(_019_),
    .B(_017_),
    .Y(_021_)
  );
  NOR _343_ (
    .A(_021_),
    .B(_120_),
    .Y(_023_)
  );
  NOR _344_ (
    .A(_023_),
    .B(_006_),
    .Y(_025_)
  );
  NOT _345_ (
    .A(_005_),
    .Y(_027_)
  );
  NAND _346_ (
    .A(_023_),
    .B(_027_),
    .Y(_029_)
  );
  NAND _347_ (
    .A(_029_),
    .B(_009_),
    .Y(_031_)
  );
  NOR _348_ (
    .A(_031_),
    .B(_025_),
    .Y(_010_)
  );
  NOR _349_ (
    .A(_023_),
    .B(_306_),
    .Y(_034_)
  );
  NOT _350_ (
    .A(_298_),
    .Y(_037_)
  );
  NAND _351_ (
    .A(_023_),
    .B(_037_),
    .Y(_039_)
  );
  NAND _352_ (
    .A(_039_),
    .B(_009_),
    .Y(_041_)
  );
  NOR _353_ (
    .A(_041_),
    .B(_034_),
    .Y(_011_)
  );
  NOR _354_ (
    .A(_023_),
    .B(_324_),
    .Y(_044_)
  );
  NOT _355_ (
    .A(_320_),
    .Y(_046_)
  );
  NAND _356_ (
    .A(_023_),
    .B(_046_),
    .Y(_048_)
  );
  NAND _357_ (
    .A(_048_),
    .B(_009_),
    .Y(_050_)
  );
  NOR _358_ (
    .A(_050_),
    .B(_044_),
    .Y(_012_)
  );
  NOR _359_ (
    .A(_023_),
    .B(_008_),
    .Y(_053_)
  );
  NOT _360_ (
    .A(_007_),
    .Y(_055_)
  );
  NAND _361_ (
    .A(_023_),
    .B(_055_),
    .Y(_056_)
  );
  NAND _362_ (
    .A(_056_),
    .B(_009_),
    .Y(_058_)
  );
  NOR _363_ (
    .A(_058_),
    .B(_053_),
    .Y(_013_)
  );
  NOR _364_ (
    .A(_023_),
    .B(_035_),
    .Y(_060_)
  );
  NOT _365_ (
    .A(_015_),
    .Y(_062_)
  );
  NAND _366_ (
    .A(_023_),
    .B(_062_),
    .Y(_064_)
  );
  NAND _367_ (
    .A(_064_),
    .B(_009_),
    .Y(_065_)
  );
  NOR _368_ (
    .A(_065_),
    .B(_060_),
    .Y(_014_)
  );
  NOR _369_ (
    .A(_023_),
    .B(_084_),
    .Y(_068_)
  );
  NOT _370_ (
    .A(_069_),
    .Y(_070_)
  );
  NAND _371_ (
    .A(_023_),
    .B(_070_),
    .Y(_072_)
  );
  NAND _372_ (
    .A(_072_),
    .B(_009_),
    .Y(_074_)
  );
  NOR _373_ (
    .A(_074_),
    .B(_068_),
    .Y(_016_)
  );
  NOR _374_ (
    .A(_023_),
    .B(_121_),
    .Y(_076_)
  );
  NOT _375_ (
    .A(_104_),
    .Y(_078_)
  );
  NAND _376_ (
    .A(_023_),
    .B(_078_),
    .Y(_079_)
  );
  NAND _377_ (
    .A(_079_),
    .B(_009_),
    .Y(_081_)
  );
  NOR _378_ (
    .A(_081_),
    .B(_076_),
    .Y(_018_)
  );
  NOR _379_ (
    .A(_023_),
    .B(_155_),
    .Y(_083_)
  );
  NOT _380_ (
    .A(_138_),
    .Y(_086_)
  );
  NAND _381_ (
    .A(_023_),
    .B(_086_),
    .Y(_088_)
  );
  NAND _382_ (
    .A(_088_),
    .B(_009_),
    .Y(_089_)
  );
  NOR _383_ (
    .A(_089_),
    .B(_083_),
    .Y(_020_)
  );
  NOR _384_ (
    .A(_023_),
    .B(_192_),
    .Y(_090_)
  );
  NOT _385_ (
    .A(_180_),
    .Y(_091_)
  );
  NAND _386_ (
    .A(_023_),
    .B(_091_),
    .Y(_092_)
  );
  NAND _387_ (
    .A(_092_),
    .B(_009_),
    .Y(_093_)
  );
  NOR _388_ (
    .A(_093_),
    .B(_090_),
    .Y(_022_)
  );
  NOR _389_ (
    .A(_023_),
    .B(_227_),
    .Y(_094_)
  );
  NOT _390_ (
    .A(_217_),
    .Y(_095_)
  );
  NAND _391_ (
    .A(_023_),
    .B(_095_),
    .Y(_096_)
  );
  NAND _392_ (
    .A(_096_),
    .B(_009_),
    .Y(_097_)
  );
  NOR _393_ (
    .A(_097_),
    .B(_094_),
    .Y(_024_)
  );
  NOR _394_ (
    .A(_023_),
    .B(_248_),
    .Y(_098_)
  );
  NOT _395_ (
    .A(_241_),
    .Y(_099_)
  );
  NAND _396_ (
    .A(_023_),
    .B(_099_),
    .Y(_100_)
  );
  NAND _397_ (
    .A(_100_),
    .B(_009_),
    .Y(_101_)
  );
  NOR _398_ (
    .A(_101_),
    .B(_098_),
    .Y(_026_)
  );
  NOR _399_ (
    .A(_023_),
    .B(_272_),
    .Y(_103_)
  );
  NOT _400_ (
    .A(_263_),
    .Y(_106_)
  );
  NAND _401_ (
    .A(_023_),
    .B(_106_),
    .Y(_108_)
  );
  NAND _402_ (
    .A(_108_),
    .B(_009_),
    .Y(_110_)
  );
  NOR _403_ (
    .A(_110_),
    .B(_103_),
    .Y(_028_)
  );
  NOR _404_ (
    .A(_023_),
    .B(_296_),
    .Y(_113_)
  );
  NOT _405_ (
    .A(_289_),
    .Y(_115_)
  );
  NAND _406_ (
    .A(_023_),
    .B(_115_),
    .Y(_117_)
  );
  NAND _407_ (
    .A(_117_),
    .B(_009_),
    .Y(_118_)
  );
  NOR _408_ (
    .A(_118_),
    .B(_113_),
    .Y(_030_)
  );
  NOR _409_ (
    .A(_023_),
    .B(_300_),
    .Y(_119_)
  );
  NOT _410_ (
    .A(_299_),
    .Y(_122_)
  );
  NAND _411_ (
    .A(_023_),
    .B(_122_),
    .Y(_123_)
  );
  NAND _412_ (
    .A(_123_),
    .B(_009_),
    .Y(_124_)
  );
  NOR _413_ (
    .A(_124_),
    .B(_119_),
    .Y(_032_)
  );
  NOR _414_ (
    .A(_023_),
    .B(_302_),
    .Y(_125_)
  );
  NOT _415_ (
    .A(_301_),
    .Y(_126_)
  );
  NAND _416_ (
    .A(_023_),
    .B(_126_),
    .Y(_127_)
  );
  NAND _417_ (
    .A(_127_),
    .B(_009_),
    .Y(_128_)
  );
  NOR _418_ (
    .A(_128_),
    .B(_125_),
    .Y(_033_)
  );
  NOR _419_ (
    .A(_023_),
    .B(_304_),
    .Y(_129_)
  );
  NOT _420_ (
    .A(_303_),
    .Y(_130_)
  );
  NAND _421_ (
    .A(_023_),
    .B(_130_),
    .Y(_131_)
  );
  NAND _422_ (
    .A(_131_),
    .B(_009_),
    .Y(_132_)
  );
  NOR _423_ (
    .A(_132_),
    .B(_129_),
    .Y(_036_)
  );
  NOR _424_ (
    .A(_023_),
    .B(_307_),
    .Y(_133_)
  );
  NOT _425_ (
    .A(_305_),
    .Y(_134_)
  );
  NAND _426_ (
    .A(_023_),
    .B(_134_),
    .Y(_135_)
  );
  NAND _427_ (
    .A(_135_),
    .B(_009_),
    .Y(_136_)
  );
  NOR _428_ (
    .A(_136_),
    .B(_133_),
    .Y(_038_)
  );
  NOR _429_ (
    .A(_023_),
    .B(_309_),
    .Y(_137_)
  );
  NOT _430_ (
    .A(_308_),
    .Y(_139_)
  );
  NAND _431_ (
    .A(_023_),
    .B(_139_),
    .Y(_141_)
  );
  NAND _432_ (
    .A(_141_),
    .B(_009_),
    .Y(_143_)
  );
  NOR _433_ (
    .A(_143_),
    .B(_137_),
    .Y(_040_)
  );
  NOR _434_ (
    .A(_023_),
    .B(_311_),
    .Y(_146_)
  );
  NOT _435_ (
    .A(_310_),
    .Y(_148_)
  );
  NAND _436_ (
    .A(_023_),
    .B(_148_),
    .Y(_150_)
  );
  NAND _437_ (
    .A(_150_),
    .B(_009_),
    .Y(_152_)
  );
  NOR _438_ (
    .A(_152_),
    .B(_146_),
    .Y(_042_)
  );
  NOR _439_ (
    .A(_023_),
    .B(_313_),
    .Y(_154_)
  );
  NOT _440_ (
    .A(_312_),
    .Y(_156_)
  );
  NAND _441_ (
    .A(_023_),
    .B(_156_),
    .Y(_157_)
  );
  NAND _442_ (
    .A(_157_),
    .B(_009_),
    .Y(_158_)
  );
  NOR _443_ (
    .A(_158_),
    .B(_154_),
    .Y(_043_)
  );
  NOR _444_ (
    .A(_023_),
    .B(_315_),
    .Y(_159_)
  );
  NOT _445_ (
    .A(_314_),
    .Y(_160_)
  );
  NAND _446_ (
    .A(_023_),
    .B(_160_),
    .Y(_161_)
  );
  NAND _447_ (
    .A(_161_),
    .B(_009_),
    .Y(_163_)
  );
  NOR _448_ (
    .A(_163_),
    .B(_159_),
    .Y(_045_)
  );
  NOR _449_ (
    .A(_023_),
    .B(_317_),
    .Y(_166_)
  );
  NOT _450_ (
    .A(_316_),
    .Y(_168_)
  );
  NAND _451_ (
    .A(_023_),
    .B(_168_),
    .Y(_170_)
  );
  NAND _452_ (
    .A(_170_),
    .B(_009_),
    .Y(_172_)
  );
  NOR _453_ (
    .A(_172_),
    .B(_166_),
    .Y(_047_)
  );
  NOR _454_ (
    .A(_023_),
    .B(_319_),
    .Y(_175_)
  );
  NOT _455_ (
    .A(_318_),
    .Y(_176_)
  );
  NAND _456_ (
    .A(_023_),
    .B(_176_),
    .Y(_177_)
  );
  NAND _457_ (
    .A(_177_),
    .B(_009_),
    .Y(_178_)
  );
  NOR _458_ (
    .A(_178_),
    .B(_175_),
    .Y(_049_)
  );
  NOR _459_ (
    .A(_023_),
    .B(_322_),
    .Y(_179_)
  );
  NOT _460_ (
    .A(_321_),
    .Y(_181_)
  );
  NAND _461_ (
    .A(_023_),
    .B(_181_),
    .Y(_182_)
  );
  NAND _462_ (
    .A(_182_),
    .B(_009_),
    .Y(_183_)
  );
  NOR _463_ (
    .A(_183_),
    .B(_179_),
    .Y(_051_)
  );
  NAND _464_ (
    .A(_009_),
    .B(_323_),
    .Y(_185_)
  );
  NOR _465_ (
    .A(_185_),
    .B(_325_),
    .Y(_186_)
  );
  NOR _466_ (
    .A(_186_),
    .B(_180_),
    .Y(_188_)
  );
  NOT _467_ (
    .A(_186_),
    .Y(_189_)
  );
  NOR _468_ (
    .A(_189_),
    .B(_052_),
    .Y(_191_)
  );
  NOR _469_ (
    .A(_191_),
    .B(_188_),
    .Y(_102_)
  );
  NOR _470_ (
    .A(_186_),
    .B(_217_),
    .Y(_194_)
  );
  NOR _471_ (
    .A(_189_),
    .B(_057_),
    .Y(_195_)
  );
  NOR _472_ (
    .A(_195_),
    .B(_194_),
    .Y(_105_)
  );
  NOR _473_ (
    .A(_186_),
    .B(_241_),
    .Y(_197_)
  );
  NOR _474_ (
    .A(_189_),
    .B(_061_),
    .Y(_199_)
  );
  NOR _475_ (
    .A(_199_),
    .B(_197_),
    .Y(_107_)
  );
  NOR _476_ (
    .A(_186_),
    .B(_263_),
    .Y(_201_)
  );
  NOR _477_ (
    .A(_189_),
    .B(_066_),
    .Y(_202_)
  );
  NOR _478_ (
    .A(_202_),
    .B(_201_),
    .Y(_109_)
  );
  NOR _479_ (
    .A(_186_),
    .B(_289_),
    .Y(_204_)
  );
  NOR _480_ (
    .A(_189_),
    .B(_071_),
    .Y(_206_)
  );
  NOR _481_ (
    .A(_206_),
    .B(_204_),
    .Y(_111_)
  );
  NOR _482_ (
    .A(_186_),
    .B(_299_),
    .Y(_209_)
  );
  NOR _483_ (
    .A(_189_),
    .B(_075_),
    .Y(_211_)
  );
  NOR _484_ (
    .A(_211_),
    .B(_209_),
    .Y(_112_)
  );
  NOR _485_ (
    .A(_186_),
    .B(_301_),
    .Y(_213_)
  );
  NOR _486_ (
    .A(_189_),
    .B(_080_),
    .Y(_214_)
  );
  NOR _487_ (
    .A(_214_),
    .B(_213_),
    .Y(_114_)
  );
  NOR _488_ (
    .A(_186_),
    .B(_303_),
    .Y(_215_)
  );
  NOR _489_ (
    .A(_189_),
    .B(_085_),
    .Y(_216_)
  );
  NOR _490_ (
    .A(_216_),
    .B(_215_),
    .Y(_116_)
  );
  NOT _491_ (
    .A(_009_),
    .Y(_218_)
  );
  NOR _492_ (
    .A(_325_),
    .B(_323_),
    .Y(_219_)
  );
  NAND _493_ (
    .A(_219_),
    .B(_120_),
    .Y(_220_)
  );
  NOR _494_ (
    .A(_220_),
    .B(_218_),
    .Y(_221_)
  );
  NOR _495_ (
    .A(_221_),
    .B(_005_),
    .Y(_222_)
  );
  NOT _496_ (
    .A(_120_),
    .Y(_223_)
  );
  NOR _497_ (
    .A(_218_),
    .B(_223_),
    .Y(_224_)
  );
  NAND _498_ (
    .A(_224_),
    .B(_219_),
    .Y(_225_)
  );
  NOR _499_ (
    .A(_225_),
    .B(_052_),
    .Y(_226_)
  );
  NOR _500_ (
    .A(_226_),
    .B(_222_),
    .Y(_140_)
  );
  NOR _501_ (
    .A(_221_),
    .B(_298_),
    .Y(_228_)
  );
  NOR _502_ (
    .A(_225_),
    .B(_057_),
    .Y(_229_)
  );
  NOR _503_ (
    .A(_229_),
    .B(_228_),
    .Y(_142_)
  );
  NOR _504_ (
    .A(_221_),
    .B(_320_),
    .Y(_230_)
  );
  NOR _505_ (
    .A(_225_),
    .B(_061_),
    .Y(_231_)
  );
  NOR _506_ (
    .A(_231_),
    .B(_230_),
    .Y(_144_)
  );
  NOR _507_ (
    .A(_221_),
    .B(_007_),
    .Y(_232_)
  );
  NOR _508_ (
    .A(_225_),
    .B(_066_),
    .Y(_233_)
  );
  NOR _509_ (
    .A(_233_),
    .B(_232_),
    .Y(_145_)
  );
  NOR _510_ (
    .A(_221_),
    .B(_015_),
    .Y(_234_)
  );
  NOR _511_ (
    .A(_225_),
    .B(_071_),
    .Y(_235_)
  );
  NOR _512_ (
    .A(_235_),
    .B(_234_),
    .Y(_147_)
  );
  NOR _513_ (
    .A(_221_),
    .B(_069_),
    .Y(_236_)
  );
  NOR _514_ (
    .A(_225_),
    .B(_075_),
    .Y(_237_)
  );
  NOR _515_ (
    .A(_237_),
    .B(_236_),
    .Y(_149_)
  );
  NOR _516_ (
    .A(_221_),
    .B(_104_),
    .Y(_238_)
  );
  NOR _517_ (
    .A(_225_),
    .B(_080_),
    .Y(_239_)
  );
  NOR _518_ (
    .A(_239_),
    .B(_238_),
    .Y(_151_)
  );
  NOR _519_ (
    .A(_221_),
    .B(_138_),
    .Y(_240_)
  );
  NOR _520_ (
    .A(_225_),
    .B(_085_),
    .Y(_242_)
  );
  NOR _521_ (
    .A(_242_),
    .B(_240_),
    .Y(_153_)
  );
  NOR _522_ (
    .A(_218_),
    .B(_019_),
    .Y(_208_)
  );
  NOR _523_ (
    .A(_208_),
    .B(_305_),
    .Y(_243_)
  );
  NOT _524_ (
    .A(_208_),
    .Y(_244_)
  );
  NOR _525_ (
    .A(_244_),
    .B(_052_),
    .Y(_245_)
  );
  NOR _526_ (
    .A(_245_),
    .B(_243_),
    .Y(_162_)
  );
  NOR _527_ (
    .A(_208_),
    .B(_308_),
    .Y(_246_)
  );
  NOR _528_ (
    .A(_244_),
    .B(_057_),
    .Y(_247_)
  );
  NOR _529_ (
    .A(_247_),
    .B(_246_),
    .Y(_164_)
  );
  NOR _530_ (
    .A(_208_),
    .B(_310_),
    .Y(_249_)
  );
  NOR _531_ (
    .A(_244_),
    .B(_061_),
    .Y(_250_)
  );
  NOR _532_ (
    .A(_250_),
    .B(_249_),
    .Y(_165_)
  );
  NOR _533_ (
    .A(_208_),
    .B(_312_),
    .Y(_251_)
  );
  NOR _534_ (
    .A(_244_),
    .B(_066_),
    .Y(_252_)
  );
  NOR _535_ (
    .A(_252_),
    .B(_251_),
    .Y(_167_)
  );
  NOR _536_ (
    .A(_208_),
    .B(_314_),
    .Y(_253_)
  );
  NOR _537_ (
    .A(_244_),
    .B(_071_),
    .Y(_254_)
  );
  NOR _538_ (
    .A(_254_),
    .B(_253_),
    .Y(_169_)
  );
  NOR _539_ (
    .A(_208_),
    .B(_316_),
    .Y(_255_)
  );
  NOR _540_ (
    .A(_244_),
    .B(_075_),
    .Y(_256_)
  );
  NOR _541_ (
    .A(_256_),
    .B(_255_),
    .Y(_171_)
  );
  NOR _542_ (
    .A(_208_),
    .B(_318_),
    .Y(_257_)
  );
  NOR _543_ (
    .A(_244_),
    .B(_080_),
    .Y(_258_)
  );
  NOR _544_ (
    .A(_258_),
    .B(_257_),
    .Y(_173_)
  );
  NOR _545_ (
    .A(_208_),
    .B(_321_),
    .Y(_259_)
  );
  NOR _546_ (
    .A(_244_),
    .B(_085_),
    .Y(_260_)
  );
  NOR _547_ (
    .A(_260_),
    .B(_259_),
    .Y(_174_)
  );
  NOR _548_ (
    .A(_023_),
    .B(_054_),
    .Y(_261_)
  );
  NOT _549_ (
    .A(_052_),
    .Y(_262_)
  );
  NAND _550_ (
    .A(_023_),
    .B(_262_),
    .Y(_264_)
  );
  NAND _551_ (
    .A(_264_),
    .B(_009_),
    .Y(_265_)
  );
  NOR _552_ (
    .A(_265_),
    .B(_261_),
    .Y(_184_)
  );
  NOR _553_ (
    .A(_023_),
    .B(_059_),
    .Y(_266_)
  );
  NOT _554_ (
    .A(_057_),
    .Y(_267_)
  );
  NAND _555_ (
    .A(_023_),
    .B(_267_),
    .Y(_268_)
  );
  NAND _556_ (
    .A(_268_),
    .B(_009_),
    .Y(_269_)
  );
  NOR _557_ (
    .A(_269_),
    .B(_266_),
    .Y(_187_)
  );
  NOR _558_ (
    .A(_023_),
    .B(_063_),
    .Y(_270_)
  );
  NOT _559_ (
    .A(_061_),
    .Y(_271_)
  );
  NAND _560_ (
    .A(_023_),
    .B(_271_),
    .Y(_273_)
  );
  NAND _561_ (
    .A(_273_),
    .B(_009_),
    .Y(_274_)
  );
  NOR _562_ (
    .A(_274_),
    .B(_270_),
    .Y(_190_)
  );
  NOR _563_ (
    .A(_023_),
    .B(_067_),
    .Y(_275_)
  );
  NOT _564_ (
    .A(_066_),
    .Y(_276_)
  );
  NAND _565_ (
    .A(_023_),
    .B(_276_),
    .Y(_277_)
  );
  NAND _566_ (
    .A(_277_),
    .B(_009_),
    .Y(_278_)
  );
  NOR _567_ (
    .A(_278_),
    .B(_275_),
    .Y(_193_)
  );
  NOR _568_ (
    .A(_023_),
    .B(_073_),
    .Y(_279_)
  );
  NOT _569_ (
    .A(_071_),
    .Y(_280_)
  );
  NAND _570_ (
    .A(_023_),
    .B(_280_),
    .Y(_281_)
  );
  NAND _571_ (
    .A(_281_),
    .B(_009_),
    .Y(_282_)
  );
  NOR _572_ (
    .A(_282_),
    .B(_279_),
    .Y(_196_)
  );
  NOR _573_ (
    .A(_023_),
    .B(_077_),
    .Y(_283_)
  );
  NOT _574_ (
    .A(_075_),
    .Y(_284_)
  );
  NAND _575_ (
    .A(_023_),
    .B(_284_),
    .Y(_285_)
  );
  NAND _576_ (
    .A(_285_),
    .B(_009_),
    .Y(_286_)
  );
  NOR _577_ (
    .A(_286_),
    .B(_283_),
    .Y(_198_)
  );
  NOR _578_ (
    .A(_023_),
    .B(_082_),
    .Y(_287_)
  );
  NOT _579_ (
    .A(_080_),
    .Y(_288_)
  );
  NAND _580_ (
    .A(_023_),
    .B(_288_),
    .Y(_290_)
  );
  NAND _581_ (
    .A(_290_),
    .B(_009_),
    .Y(_291_)
  );
  NOR _582_ (
    .A(_291_),
    .B(_287_),
    .Y(_200_)
  );
  NOR _583_ (
    .A(_023_),
    .B(_087_),
    .Y(_292_)
  );
  NOT _584_ (
    .A(_085_),
    .Y(_293_)
  );
  NAND _585_ (
    .A(_023_),
    .B(_293_),
    .Y(_294_)
  );
  NAND _586_ (
    .A(_294_),
    .B(_009_),
    .Y(_295_)
  );
  NOR _587_ (
    .A(_295_),
    .B(_292_),
    .Y(_203_)
  );
  NAND _588_ (
    .A(_009_),
    .B(_223_),
    .Y(_205_)
  );
  NOT _589_ (
    .A(_185_),
    .Y(_207_)
  );
  NOT _590_ (
    .A(_210_),
    .Y(_297_)
  );
  NOR _591_ (
    .A(_297_),
    .B(_218_),
    .Y(_212_)
  );
  DFF _592_ (
    .C(CLK),
    .D(_329_[0]),
    .Q(bits[0])
  );
  DFF _593_ (
    .C(CLK),
    .D(_326_),
    .Q(bits[1])
  );
  DFF _594_ (
    .C(CLK),
    .D(_327_),
    .Q(bits[2])
  );
  DFF _595_ (
    .C(CLK),
    .D(_328_),
    .Q(bits[3])
  );
  DFF _596_ (
    .C(CLK),
    .D(_000_[0]),
    .Q(out[0])
  );
  DFF _597_ (
    .C(CLK),
    .D(_000_[1]),
    .Q(out[1])
  );
  DFF _598_ (
    .C(CLK),
    .D(_000_[2]),
    .Q(out[2])
  );
  DFF _599_ (
    .C(CLK),
    .D(_000_[3]),
    .Q(out[3])
  );
  DFF _600_ (
    .C(CLK),
    .D(_000_[4]),
    .Q(out[4])
  );
  DFF _601_ (
    .C(CLK),
    .D(_000_[5]),
    .Q(out[5])
  );
  DFF _602_ (
    .C(CLK),
    .D(_000_[6]),
    .Q(out[6])
  );
  DFF _603_ (
    .C(CLK),
    .D(_000_[7]),
    .Q(out[7])
  );
  DFF _604_ (
    .C(CLK),
    .D(_000_[8]),
    .Q(out[8])
  );
  DFF _605_ (
    .C(CLK),
    .D(_000_[9]),
    .Q(out[9])
  );
  DFF _606_ (
    .C(CLK),
    .D(_000_[10]),
    .Q(out[10])
  );
  DFF _607_ (
    .C(CLK),
    .D(_000_[11]),
    .Q(out[11])
  );
  DFF _608_ (
    .C(CLK),
    .D(_000_[12]),
    .Q(out[12])
  );
  DFF _609_ (
    .C(CLK),
    .D(_000_[13]),
    .Q(out[13])
  );
  DFF _610_ (
    .C(CLK),
    .D(_000_[14]),
    .Q(out[14])
  );
  DFF _611_ (
    .C(CLK),
    .D(_000_[15]),
    .Q(out[15])
  );
  DFF _612_ (
    .C(CLK),
    .D(_000_[16]),
    .Q(out[16])
  );
  DFF _613_ (
    .C(CLK),
    .D(_000_[17]),
    .Q(out[17])
  );
  DFF _614_ (
    .C(CLK),
    .D(_000_[18]),
    .Q(out[18])
  );
  DFF _615_ (
    .C(CLK),
    .D(_000_[19]),
    .Q(out[19])
  );
  DFF _616_ (
    .C(CLK),
    .D(_000_[20]),
    .Q(out[20])
  );
  DFF _617_ (
    .C(CLK),
    .D(_000_[21]),
    .Q(out[21])
  );
  DFF _618_ (
    .C(CLK),
    .D(_000_[22]),
    .Q(out[22])
  );
  DFF _619_ (
    .C(CLK),
    .D(_000_[23]),
    .Q(out[23])
  );
  DFF _620_ (
    .C(CLK),
    .D(_000_[24]),
    .Q(out[24])
  );
  DFF _621_ (
    .C(CLK),
    .D(_000_[25]),
    .Q(out[25])
  );
  DFF _622_ (
    .C(CLK),
    .D(_000_[26]),
    .Q(out[26])
  );
  DFF _623_ (
    .C(CLK),
    .D(_000_[27]),
    .Q(out[27])
  );
  DFF _624_ (
    .C(CLK),
    .D(_000_[28]),
    .Q(out[28])
  );
  DFF _625_ (
    .C(CLK),
    .D(_000_[29]),
    .Q(out[29])
  );
  DFF _626_ (
    .C(CLK),
    .D(_000_[30]),
    .Q(out[30])
  );
  DFF _627_ (
    .C(CLK),
    .D(_000_[31]),
    .Q(out[31])
  );
  DFF _628_ (
    .C(CLK),
    .D(_001_[0]),
    .Q(part[8])
  );
  DFF _629_ (
    .C(CLK),
    .D(_001_[1]),
    .Q(part[9])
  );
  DFF _630_ (
    .C(CLK),
    .D(_001_[2]),
    .Q(part[10])
  );
  DFF _631_ (
    .C(CLK),
    .D(_001_[3]),
    .Q(part[11])
  );
  DFF _632_ (
    .C(CLK),
    .D(_001_[4]),
    .Q(part[12])
  );
  DFF _633_ (
    .C(CLK),
    .D(_001_[5]),
    .Q(part[13])
  );
  DFF _634_ (
    .C(CLK),
    .D(_001_[6]),
    .Q(part[14])
  );
  DFF _635_ (
    .C(CLK),
    .D(_001_[7]),
    .Q(part[15])
  );
  DFF _636_ (
    .C(CLK),
    .D(_001_[8]),
    .Q(part[16])
  );
  DFF _637_ (
    .C(CLK),
    .D(_001_[9]),
    .Q(part[17])
  );
  DFF _638_ (
    .C(CLK),
    .D(_001_[10]),
    .Q(part[18])
  );
  DFF _639_ (
    .C(CLK),
    .D(_001_[11]),
    .Q(part[19])
  );
  DFF _640_ (
    .C(CLK),
    .D(_001_[12]),
    .Q(part[20])
  );
  DFF _641_ (
    .C(CLK),
    .D(_001_[13]),
    .Q(part[21])
  );
  DFF _642_ (
    .C(CLK),
    .D(_001_[14]),
    .Q(part[22])
  );
  DFF _643_ (
    .C(CLK),
    .D(_001_[15]),
    .Q(part[23])
  );
  DFF _644_ (
    .C(CLK),
    .D(_001_[16]),
    .Q(part[24])
  );
  DFF _645_ (
    .C(CLK),
    .D(_001_[17]),
    .Q(part[25])
  );
  DFF _646_ (
    .C(CLK),
    .D(_001_[18]),
    .Q(part[26])
  );
  DFF _647_ (
    .C(CLK),
    .D(_001_[19]),
    .Q(part[27])
  );
  DFF _648_ (
    .C(CLK),
    .D(_001_[20]),
    .Q(part[28])
  );
  DFF _649_ (
    .C(CLK),
    .D(_001_[21]),
    .Q(part[29])
  );
  DFF _650_ (
    .C(CLK),
    .D(_001_[22]),
    .Q(part[30])
  );
  DFF _651_ (
    .C(CLK),
    .D(_001_[23]),
    .Q(part[31])
  );
  assign temp = in;
  assign _005_ = part[8];
  assign _006_ = out[8];
  assign _120_ = bits[2];
  assign _298_ = part[9];
  assign _306_ = out[9];
  assign _320_ = part[10];
  assign _324_ = out[10];
  assign _007_ = part[11];
  assign _008_ = out[11];
  assign _015_ = part[12];
  assign _035_ = out[12];
  assign _069_ = part[13];
  assign _084_ = out[13];
  assign _104_ = part[14];
  assign _121_ = out[14];
  assign _138_ = part[15];
  assign _155_ = out[15];
  assign _180_ = part[16];
  assign _192_ = out[16];
  assign _217_ = part[17];
  assign _227_ = out[17];
  assign _241_ = part[18];
  assign _248_ = out[18];
  assign _263_ = part[19];
  assign _272_ = out[19];
  assign _289_ = part[20];
  assign _296_ = out[20];
  assign _299_ = part[21];
  assign _300_ = out[21];
  assign _301_ = part[22];
  assign _302_ = out[22];
  assign _303_ = part[23];
  assign _304_ = out[23];
  assign _305_ = part[24];
  assign _307_ = out[24];
  assign _308_ = part[25];
  assign _309_ = out[25];
  assign _310_ = part[26];
  assign _311_ = out[26];
  assign _312_ = part[27];
  assign _313_ = out[27];
  assign _314_ = part[28];
  assign _315_ = out[28];
  assign _316_ = part[29];
  assign _317_ = out[29];
  assign _318_ = part[30];
  assign _319_ = out[30];
  assign _321_ = part[31];
  assign _322_ = out[31];
  assign _323_ = bits[1];
  assign _325_ = bits[3];
  assign _009_ = ENB;
  assign _000_[8] = _010_;
  assign _000_[9] = _011_;
  assign _000_[10] = _012_;
  assign _000_[11] = _013_;
  assign _000_[12] = _014_;
  assign _000_[13] = _016_;
  assign _000_[14] = _018_;
  assign _000_[15] = _020_;
  assign _000_[16] = _022_;
  assign _000_[17] = _024_;
  assign _000_[18] = _026_;
  assign _000_[19] = _028_;
  assign _000_[20] = _030_;
  assign _000_[21] = _032_;
  assign _000_[22] = _033_;
  assign _000_[23] = _036_;
  assign _000_[24] = _038_;
  assign _000_[25] = _040_;
  assign _000_[26] = _042_;
  assign _000_[27] = _043_;
  assign _000_[28] = _045_;
  assign _000_[29] = _047_;
  assign _000_[30] = _049_;
  assign _000_[31] = _051_;
  assign _052_ = in[0];
  assign _054_ = out[0];
  assign _057_ = in[1];
  assign _059_ = out[1];
  assign _061_ = in[2];
  assign _063_ = out[2];
  assign _066_ = in[3];
  assign _067_ = out[3];
  assign _071_ = in[4];
  assign _073_ = out[4];
  assign _075_ = in[5];
  assign _077_ = out[5];
  assign _080_ = in[6];
  assign _082_ = out[6];
  assign _085_ = in[7];
  assign _087_ = out[7];
  assign _001_[8] = _102_;
  assign _001_[9] = _105_;
  assign _001_[10] = _107_;
  assign _001_[11] = _109_;
  assign _001_[12] = _111_;
  assign _001_[13] = _112_;
  assign _001_[14] = _114_;
  assign _001_[15] = _116_;
  assign _001_[0] = _140_;
  assign _001_[1] = _142_;
  assign _001_[2] = _144_;
  assign _001_[3] = _145_;
  assign _001_[4] = _147_;
  assign _001_[5] = _149_;
  assign _001_[6] = _151_;
  assign _001_[7] = _153_;
  assign _001_[16] = _162_;
  assign _001_[17] = _164_;
  assign _001_[18] = _165_;
  assign _001_[19] = _167_;
  assign _001_[20] = _169_;
  assign _001_[21] = _171_;
  assign _001_[22] = _173_;
  assign _001_[23] = _174_;
  assign _000_[0] = _184_;
  assign _000_[1] = _187_;
  assign _000_[2] = _190_;
  assign _000_[3] = _193_;
  assign _000_[4] = _196_;
  assign _000_[5] = _198_;
  assign _000_[6] = _200_;
  assign _000_[7] = _203_;
  assign _329_[0] = _205_;
  assign _327_ = _207_;
  assign _326_ = _208_;
  assign _210_ = bits[0];
  assign _328_ = _212_;
endmodule

(* src = "decoder.v:2" *)
module decoders(in_10b, out_8b);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  (* src = "decoder.v:20" *)
  wire _140_;
  (* src = "decoder.v:20" *)
  wire _141_;
  (* src = "decoder.v:20" *)
  wire _142_;
  (* src = "decoder.v:20" *)
  wire _143_;
  (* src = "decoder.v:20" *)
  wire _144_;
  (* src = "decoder.v:20" *)
  wire _145_;
  (* src = "decoder.v:20" *)
  wire _146_;
  (* src = "decoder.v:21" *)
  wire _147_;
  (* src = "decoder.v:21" *)
  wire _148_;
  (* src = "decoder.v:21" *)
  wire _149_;
  (* src = "decoder.v:21" *)
  wire _150_;
  (* src = "decoder.v:21" *)
  wire _151_;
  (* src = "decoder.v:21" *)
  wire _152_;
  (* src = "decoder.v:21" *)
  wire _153_;
  (* src = "decoder.v:29" *)
  wire _154_;
  (* src = "decoder.v:29" *)
  wire _155_;
  (* src = "decoder.v:29" *)
  wire _156_;
  (* src = "decoder.v:29" *)
  wire _157_;
  (* src = "decoder.v:29" *)
  wire _158_;
  (* src = "decoder.v:29" *)
  wire _159_;
  (* src = "decoder.v:29" *)
  wire _160_;
  (* src = "decoder.v:29" *)
  wire _161_;
  (* src = "decoder.v:29" *)
  wire _162_;
  (* src = "decoder.v:29" *)
  wire _163_;
  (* src = "decoder.v:29" *)
  wire _164_;
  (* src = "decoder.v:38" *)
  wire _165_;
  (* src = "decoder.v:38" *)
  wire _166_;
  (* src = "decoder.v:38" *)
  wire _167_;
  (* src = "decoder.v:48" *)
  wire _168_;
  (* src = "decoder.v:48" *)
  wire _169_;
  (* src = "decoder.v:48" *)
  wire _170_;
  (* src = "decoder.v:48" *)
  wire _171_;
  (* src = "decoder.v:48" *)
  wire _172_;
  (* src = "decoder.v:57" *)
  wire _173_;
  (* src = "decoder.v:57" *)
  wire _174_;
  (* src = "decoder.v:57" *)
  wire _175_;
  (* src = "decoder.v:67" *)
  wire _176_;
  (* src = "decoder.v:77" *)
  wire _177_;
  (* src = "decoder.v:77" *)
  wire _178_;
  (* src = "decoder.v:77" *)
  wire _179_;
  (* src = "decoder.v:77" *)
  wire _180_;
  (* src = "decoder.v:87" *)
  wire _181_;
  (* src = "decoder.v:87" *)
  wire _182_;
  (* src = "decoder.v:98" *)
  wire _183_;
  (* src = "decoder.v:98" *)
  wire _184_;
  wire [15:0] _185_;
  wire [15:0] _186_;
  wire [15:0] _187_;
  wire [15:0] _188_;
  wire [15:0] _189_;
  wire [15:0] _190_;
  wire [15:0] _191_;
  wire [15:0] _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  (* src = "decoder.v:20" *)
  wire _196_;
  (* src = "decoder.v:20" *)
  wire _197_;
  (* src = "decoder.v:21" *)
  wire _198_;
  (* src = "decoder.v:21" *)
  wire _199_;
  (* src = "decoder.v:29" *)
  wire _200_;
  (* src = "decoder.v:29" *)
  wire _201_;
  (* src = "decoder.v:29" *)
  wire _202_;
  (* src = "decoder.v:29" *)
  wire _203_;
  (* src = "decoder.v:29" *)
  wire _204_;
  (* src = "decoder.v:29" *)
  wire [31:0] _205_;
  (* src = "decoder.v:38" *)
  wire _206_;
  (* src = "decoder.v:38" *)
  wire _207_;
  (* src = "decoder.v:38" *)
  wire [31:0] _208_;
  (* src = "decoder.v:48" *)
  wire _209_;
  (* src = "decoder.v:48" *)
  wire _210_;
  (* src = "decoder.v:48" *)
  wire _211_;
  (* src = "decoder.v:48" *)
  wire [31:0] _212_;
  (* src = "decoder.v:57" *)
  wire _213_;
  (* src = "decoder.v:57" *)
  wire _214_;
  (* src = "decoder.v:57" *)
  wire _215_;
  (* src = "decoder.v:57" *)
  wire [31:0] _216_;
  (* src = "decoder.v:67" *)
  wire _217_;
  (* src = "decoder.v:67" *)
  wire _218_;
  (* src = "decoder.v:67" *)
  wire [31:0] _219_;
  (* src = "decoder.v:77" *)
  wire _220_;
  (* src = "decoder.v:77" *)
  wire [31:0] _221_;
  (* src = "decoder.v:87" *)
  wire _222_;
  (* src = "decoder.v:87" *)
  wire [31:0] _223_;
  (* src = "decoder.v:98" *)
  wire _224_;
  (* src = "decoder.v:98" *)
  wire [31:0] _225_;
  (* src = "decoder.v:100" *)
  wire _226_;
  (* src = "decoder.v:21" *)
  wire _227_;
  (* src = "decoder.v:21" *)
  wire _228_;
  (* src = "decoder.v:21" *)
  wire _229_;
  (* src = "decoder.v:21" *)
  wire _230_;
  (* src = "decoder.v:29" *)
  wire _231_;
  (* src = "decoder.v:29" *)
  wire _232_;
  (* src = "decoder.v:79" *)
  wire _233_;
  (* src = "decoder.v:87" *)
  wire _234_;
  (* src = "decoder.v:89" *)
  wire _235_;
  (* src = "decoder.v:29" *)
  wire _236_;
  (* src = "decoder.v:77" *)
  wire _237_;
  (* src = "decoder.v:98" *)
  wire _238_;
  (* src = "decoder.v:38" *)
  wire _239_;
  (* src = "decoder.v:48" *)
  wire _240_;
  (* src = "decoder.v:5" *)
  wire P3x;
  (* src = "decoder.v:5" *)
  wire Px3;
  (* src = "decoder.v:5" *)
  wire a;
  (* src = "decoder.v:5" *)
  wire b;
  (* src = "decoder.v:5" *)
  wire c;
  (* src = "decoder.v:5" *)
  wire d;
  (* src = "decoder.v:5" *)
  wire e;
  (* src = "decoder.v:5" *)
  wire f;
  (* src = "decoder.v:5" *)
  wire g;
  (* src = "decoder.v:5" *)
  wire h;
  (* src = "decoder.v:5" *)
  wire i;
  (* src = "decoder.v:4" *)
  input [9:0] in_10b;
  (* src = "decoder.v:5" *)
  wire j;
  (* src = "decoder.v:6" *)
  output [7:0] out_8b;
  NOT _241_ (
    .A(_098_),
    .Y(_045_)
  );
  NOR _242_ (
    .A(_045_),
    .B(_092_),
    .Y(_046_)
  );
  NOT _243_ (
    .A(_046_),
    .Y(_047_)
  );
  NOR _244_ (
    .A(_129_),
    .B(_086_),
    .Y(_048_)
  );
  NOT _245_ (
    .A(_086_),
    .Y(_049_)
  );
  NOT _246_ (
    .A(_129_),
    .Y(_050_)
  );
  NOR _247_ (
    .A(_050_),
    .B(_049_),
    .Y(_051_)
  );
  NOR _248_ (
    .A(_051_),
    .B(_048_),
    .Y(_052_)
  );
  NOR _249_ (
    .A(_052_),
    .B(_047_),
    .Y(_053_)
  );
  NOT _250_ (
    .A(_092_),
    .Y(_054_)
  );
  NOR _251_ (
    .A(_098_),
    .B(_054_),
    .Y(_055_)
  );
  NOR _252_ (
    .A(_055_),
    .B(_046_),
    .Y(_056_)
  );
  NAND _253_ (
    .A(_056_),
    .B(_129_),
    .Y(_057_)
  );
  NOT _254_ (
    .A(_109_),
    .Y(_058_)
  );
  NOT _255_ (
    .A(_115_),
    .Y(_059_)
  );
  NAND _256_ (
    .A(_059_),
    .B(_058_),
    .Y(_060_)
  );
  NOR _257_ (
    .A(_132_),
    .B(_103_),
    .Y(_061_)
  );
  NOT _258_ (
    .A(_061_),
    .Y(_062_)
  );
  NOR _259_ (
    .A(_062_),
    .B(_060_),
    .Y(_063_)
  );
  NAND _260_ (
    .A(_063_),
    .B(_052_),
    .Y(_064_)
  );
  NAND _261_ (
    .A(_064_),
    .B(_057_),
    .Y(_065_)
  );
  NOR _262_ (
    .A(_065_),
    .B(_053_),
    .Y(_066_)
  );
  NAND _263_ (
    .A(_066_),
    .B(_086_),
    .Y(_067_)
  );
  NOT _264_ (
    .A(_066_),
    .Y(_068_)
  );
  NAND _265_ (
    .A(_068_),
    .B(_049_),
    .Y(_069_)
  );
  NAND _266_ (
    .A(_069_),
    .B(_067_),
    .Y(_089_)
  );
  NOT _267_ (
    .A(_048_),
    .Y(_070_)
  );
  NOR _268_ (
    .A(_056_),
    .B(_070_),
    .Y(_071_)
  );
  NOR _269_ (
    .A(_071_),
    .B(_065_),
    .Y(_072_)
  );
  NAND _270_ (
    .A(_072_),
    .B(_092_),
    .Y(_073_)
  );
  NOT _271_ (
    .A(_072_),
    .Y(_074_)
  );
  NAND _272_ (
    .A(_074_),
    .B(_054_),
    .Y(_075_)
  );
  NAND _273_ (
    .A(_075_),
    .B(_073_),
    .Y(_095_)
  );
  NOR _274_ (
    .A(_065_),
    .B(_051_),
    .Y(_076_)
  );
  NOR _275_ (
    .A(_076_),
    .B(_045_),
    .Y(_077_)
  );
  NOT _276_ (
    .A(_076_),
    .Y(_078_)
  );
  NOR _277_ (
    .A(_078_),
    .B(_098_),
    .Y(_079_)
  );
  NOR _278_ (
    .A(_079_),
    .B(_077_),
    .Y(_101_)
  );
  NOT _279_ (
    .A(_103_),
    .Y(_080_)
  );
  NAND _280_ (
    .A(_132_),
    .B(_103_),
    .Y(_081_)
  );
  NOT _281_ (
    .A(_081_),
    .Y(_082_)
  );
  NOR _282_ (
    .A(_082_),
    .B(_061_),
    .Y(_083_)
  );
  NAND _283_ (
    .A(_124_),
    .B(_119_),
    .Y(_084_)
  );
  NOR _284_ (
    .A(_115_),
    .B(_058_),
    .Y(_085_)
  );
  NAND _285_ (
    .A(_085_),
    .B(_084_),
    .Y(_087_)
  );
  NOR _286_ (
    .A(_087_),
    .B(_083_),
    .Y(_088_)
  );
  NOT _287_ (
    .A(_119_),
    .Y(_090_)
  );
  NOT _288_ (
    .A(_124_),
    .Y(_091_)
  );
  NAND _289_ (
    .A(_091_),
    .B(_090_),
    .Y(_093_)
  );
  NAND _290_ (
    .A(_093_),
    .B(_060_),
    .Y(_094_)
  );
  NOR _291_ (
    .A(_091_),
    .B(_090_),
    .Y(_096_)
  );
  NOR _292_ (
    .A(_059_),
    .B(_058_),
    .Y(_097_)
  );
  NOR _293_ (
    .A(_097_),
    .B(_096_),
    .Y(_099_)
  );
  NAND _294_ (
    .A(_099_),
    .B(_094_),
    .Y(_100_)
  );
  NOR _295_ (
    .A(_100_),
    .B(_082_),
    .Y(_102_)
  );
  NOR _296_ (
    .A(_102_),
    .B(_088_),
    .Y(_104_)
  );
  NOR _297_ (
    .A(_104_),
    .B(_080_),
    .Y(_105_)
  );
  NOT _298_ (
    .A(_088_),
    .Y(_107_)
  );
  NOR _299_ (
    .A(_115_),
    .B(_109_),
    .Y(_108_)
  );
  NOR _300_ (
    .A(_124_),
    .B(_119_),
    .Y(_110_)
  );
  NOR _301_ (
    .A(_110_),
    .B(_108_),
    .Y(_111_)
  );
  NOR _302_ (
    .A(_111_),
    .B(_062_),
    .Y(_113_)
  );
  NOR _303_ (
    .A(_113_),
    .B(_102_),
    .Y(_114_)
  );
  NAND _304_ (
    .A(_114_),
    .B(_107_),
    .Y(_116_)
  );
  NOR _305_ (
    .A(_116_),
    .B(_103_),
    .Y(_117_)
  );
  NOR _306_ (
    .A(_117_),
    .B(_105_),
    .Y(_106_)
  );
  NAND _307_ (
    .A(_132_),
    .B(_109_),
    .Y(_120_)
  );
  NAND _308_ (
    .A(_120_),
    .B(_103_),
    .Y(_121_)
  );
  NOT _309_ (
    .A(_121_),
    .Y(_123_)
  );
  NOR _310_ (
    .A(_123_),
    .B(_100_),
    .Y(_125_)
  );
  NAND _311_ (
    .A(_111_),
    .B(_132_),
    .Y(_126_)
  );
  NOR _312_ (
    .A(_126_),
    .B(_099_),
    .Y(_128_)
  );
  NOR _313_ (
    .A(_128_),
    .B(_125_),
    .Y(_130_)
  );
  NOR _314_ (
    .A(_084_),
    .B(_081_),
    .Y(_131_)
  );
  NOR _315_ (
    .A(_131_),
    .B(_063_),
    .Y(_133_)
  );
  NAND _316_ (
    .A(_133_),
    .B(_130_),
    .Y(_134_)
  );
  NOR _317_ (
    .A(_091_),
    .B(_119_),
    .Y(_135_)
  );
  NOT _318_ (
    .A(_135_),
    .Y(_136_)
  );
  NAND _319_ (
    .A(_081_),
    .B(_062_),
    .Y(_137_)
  );
  NOR _320_ (
    .A(_097_),
    .B(_108_),
    .Y(_138_)
  );
  NAND _321_ (
    .A(_138_),
    .B(_137_),
    .Y(_139_)
  );
  NOR _322_ (
    .A(_139_),
    .B(_136_),
    .Y(_000_)
  );
  NOR _323_ (
    .A(_000_),
    .B(_134_),
    .Y(_001_)
  );
  NAND _324_ (
    .A(_001_),
    .B(_109_),
    .Y(_002_)
  );
  NAND _325_ (
    .A(_115_),
    .B(_109_),
    .Y(_003_)
  );
  NAND _326_ (
    .A(_003_),
    .B(_084_),
    .Y(_004_)
  );
  NOR _327_ (
    .A(_004_),
    .B(_111_),
    .Y(_005_)
  );
  NAND _328_ (
    .A(_121_),
    .B(_005_),
    .Y(_006_)
  );
  NOR _329_ (
    .A(_099_),
    .B(_094_),
    .Y(_007_)
  );
  NAND _330_ (
    .A(_007_),
    .B(_132_),
    .Y(_008_)
  );
  NAND _331_ (
    .A(_008_),
    .B(_006_),
    .Y(_009_)
  );
  NOT _332_ (
    .A(_133_),
    .Y(_010_)
  );
  NOR _333_ (
    .A(_010_),
    .B(_009_),
    .Y(_011_)
  );
  NOT _334_ (
    .A(_000_),
    .Y(_012_)
  );
  NAND _335_ (
    .A(_012_),
    .B(_011_),
    .Y(_013_)
  );
  NAND _336_ (
    .A(_013_),
    .B(_058_),
    .Y(_014_)
  );
  NAND _337_ (
    .A(_014_),
    .B(_002_),
    .Y(_112_)
  );
  NOR _338_ (
    .A(_124_),
    .B(_090_),
    .Y(_015_)
  );
  NOT _339_ (
    .A(_015_),
    .Y(_016_)
  );
  NOR _340_ (
    .A(_016_),
    .B(_139_),
    .Y(_017_)
  );
  NOR _341_ (
    .A(_017_),
    .B(_113_),
    .Y(_018_)
  );
  NAND _342_ (
    .A(_018_),
    .B(_130_),
    .Y(_019_)
  );
  NOR _343_ (
    .A(_019_),
    .B(_115_),
    .Y(_020_)
  );
  NAND _344_ (
    .A(_003_),
    .B(_060_),
    .Y(_021_)
  );
  NOR _345_ (
    .A(_021_),
    .B(_083_),
    .Y(_022_)
  );
  NAND _346_ (
    .A(_015_),
    .B(_022_),
    .Y(_023_)
  );
  NAND _347_ (
    .A(_023_),
    .B(_130_),
    .Y(_024_)
  );
  NOR _348_ (
    .A(_024_),
    .B(_113_),
    .Y(_025_)
  );
  NOR _349_ (
    .A(_025_),
    .B(_059_),
    .Y(_026_)
  );
  NOR _350_ (
    .A(_026_),
    .B(_020_),
    .Y(_118_)
  );
  NOR _351_ (
    .A(_015_),
    .B(_135_),
    .Y(_027_)
  );
  NOR _352_ (
    .A(_059_),
    .B(_109_),
    .Y(_028_)
  );
  NAND _353_ (
    .A(_028_),
    .B(_137_),
    .Y(_029_)
  );
  NOR _354_ (
    .A(_029_),
    .B(_027_),
    .Y(_030_)
  );
  NOR _355_ (
    .A(_030_),
    .B(_063_),
    .Y(_031_)
  );
  NAND _356_ (
    .A(_031_),
    .B(_130_),
    .Y(_032_)
  );
  NOR _357_ (
    .A(_032_),
    .B(_119_),
    .Y(_033_)
  );
  NOT _358_ (
    .A(_027_),
    .Y(_034_)
  );
  NOT _359_ (
    .A(_028_),
    .Y(_035_)
  );
  NOR _360_ (
    .A(_035_),
    .B(_083_),
    .Y(_036_)
  );
  NAND _361_ (
    .A(_036_),
    .B(_034_),
    .Y(_037_)
  );
  NAND _362_ (
    .A(_037_),
    .B(_130_),
    .Y(_038_)
  );
  NOR _363_ (
    .A(_038_),
    .B(_063_),
    .Y(_039_)
  );
  NOR _364_ (
    .A(_039_),
    .B(_090_),
    .Y(_040_)
  );
  NOR _365_ (
    .A(_040_),
    .B(_033_),
    .Y(_122_)
  );
  NAND _366_ (
    .A(_011_),
    .B(_107_),
    .Y(_041_)
  );
  NAND _367_ (
    .A(_041_),
    .B(_091_),
    .Y(_042_)
  );
  NOR _368_ (
    .A(_134_),
    .B(_088_),
    .Y(_043_)
  );
  NAND _369_ (
    .A(_043_),
    .B(_124_),
    .Y(_044_)
  );
  NAND _370_ (
    .A(_044_),
    .B(_042_),
    .Y(_127_)
  );
  assign a = in_10b[9];
  assign b = in_10b[8];
  assign c = in_10b[7];
  assign d = in_10b[6];
  assign e = in_10b[5];
  assign f = in_10b[3];
  assign g = in_10b[2];
  assign h = in_10b[1];
  assign i = in_10b[4];
  assign j = in_10b[0];
  assign _086_ = in_10b[1];
  assign out_8b[7] = _089_;
  assign _092_ = in_10b[2];
  assign out_8b[6] = _095_;
  assign _098_ = in_10b[3];
  assign out_8b[5] = _101_;
  assign _103_ = in_10b[5];
  assign out_8b[4] = _106_;
  assign _109_ = in_10b[6];
  assign out_8b[3] = _112_;
  assign _115_ = in_10b[7];
  assign out_8b[2] = _118_;
  assign _119_ = in_10b[8];
  assign out_8b[1] = _122_;
  assign _124_ = in_10b[9];
  assign out_8b[0] = _127_;
  assign _129_ = in_10b[0];
  assign _132_ = in_10b[4];
endmodule

(* src = "sp.v:2" *)
module serialparalelos(CLOCK, ENABLE, IS, OP);
  (* src = "sp.v:13" *)
  wire [4:0] _000_;
  (* src = "sp.v:13" *)
  wire [9:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  (* src = "sp.v:15" *)
  wire [31:0] _088_;
  wire [1:0] _089_;
  wire _090_;
  wire [1:0] _091_;
  wire _092_;
  wire [4:0] _093_;
  wire _094_;
  wire _095_;
  wire [4:0] _096_;
  (* src = "<techmap.v>:260|<techmap.v>:203" *)
  wire [31:0] _097_;
  (* src = "<techmap.v>:260|<techmap.v>:222" *)
  wire _098_;
  (* src = "sp.v:3" *)
  input CLOCK;
  (* src = "sp.v:3" *)
  input ENABLE;
  (* src = "sp.v:3" *)
  input IS;
  (* src = "sp.v:4" *)
  output [9:0] OP;
  (* src = "sp.v:6" *)
  wire [4:0] contador;
  (* src = "sp.v:5" *)
  wire [9:0] temp;
  NOT _099_ (
    .A(_002_),
    .Y(_017_)
  );
  NOT _100_ (
    .A(_039_),
    .Y(_018_)
  );
  NAND _101_ (
    .A(_018_),
    .B(_017_),
    .Y(_019_)
  );
  NOT _102_ (
    .A(_003_),
    .Y(_020_)
  );
  NOT _103_ (
    .A(_031_),
    .Y(_022_)
  );
  NOR _104_ (
    .A(_022_),
    .B(_067_),
    .Y(_024_)
  );
  NAND _105_ (
    .A(_024_),
    .B(_020_),
    .Y(_026_)
  );
  NOR _106_ (
    .A(_026_),
    .B(_019_),
    .Y(_028_)
  );
  NAND _107_ (
    .A(_028_),
    .B(_004_),
    .Y(_030_)
  );
  NOT _108_ (
    .A(_067_),
    .Y(_032_)
  );
  NAND _109_ (
    .A(_031_),
    .B(_032_),
    .Y(_033_)
  );
  NOR _110_ (
    .A(_033_),
    .B(_019_),
    .Y(_034_)
  );
  NAND _111_ (
    .A(_034_),
    .B(_020_),
    .Y(_035_)
  );
  NAND _112_ (
    .A(_035_),
    .B(_037_),
    .Y(_036_)
  );
  NAND _113_ (
    .A(_036_),
    .B(_030_),
    .Y(_005_)
  );
  NAND _114_ (
    .A(_035_),
    .B(_040_),
    .Y(_038_)
  );
  NAND _115_ (
    .A(_038_),
    .B(_030_),
    .Y(_006_)
  );
  NAND _116_ (
    .A(_035_),
    .B(_041_),
    .Y(_042_)
  );
  NAND _117_ (
    .A(_042_),
    .B(_030_),
    .Y(_007_)
  );
  NAND _118_ (
    .A(_035_),
    .B(_043_),
    .Y(_045_)
  );
  NAND _119_ (
    .A(_045_),
    .B(_030_),
    .Y(_008_)
  );
  NAND _120_ (
    .A(_035_),
    .B(_044_),
    .Y(_048_)
  );
  NAND _121_ (
    .A(_048_),
    .B(_030_),
    .Y(_009_)
  );
  NAND _122_ (
    .A(_035_),
    .B(_046_),
    .Y(_051_)
  );
  NAND _123_ (
    .A(_051_),
    .B(_030_),
    .Y(_010_)
  );
  NAND _124_ (
    .A(_035_),
    .B(_047_),
    .Y(_053_)
  );
  NAND _125_ (
    .A(_053_),
    .B(_030_),
    .Y(_011_)
  );
  NAND _126_ (
    .A(_035_),
    .B(_049_),
    .Y(_054_)
  );
  NAND _127_ (
    .A(_054_),
    .B(_030_),
    .Y(_012_)
  );
  NAND _128_ (
    .A(_035_),
    .B(_050_),
    .Y(_055_)
  );
  NAND _129_ (
    .A(_055_),
    .B(_030_),
    .Y(_013_)
  );
  NAND _130_ (
    .A(_035_),
    .B(_052_),
    .Y(_056_)
  );
  NAND _131_ (
    .A(_056_),
    .B(_030_),
    .Y(_014_)
  );
  NOT _132_ (
    .A(_004_),
    .Y(_057_)
  );
  NOT _133_ (
    .A(_015_),
    .Y(_058_)
  );
  NOR _134_ (
    .A(_058_),
    .B(_057_),
    .Y(_016_)
  );
  NOR _135_ (
    .A(_031_),
    .B(_058_),
    .Y(_021_)
  );
  NOR _136_ (
    .A(_031_),
    .B(_032_),
    .Y(_059_)
  );
  NOR _137_ (
    .A(_059_),
    .B(_024_),
    .Y(_060_)
  );
  NOR _138_ (
    .A(_019_),
    .B(_020_),
    .Y(_061_)
  );
  NAND _139_ (
    .A(_061_),
    .B(_059_),
    .Y(_062_)
  );
  NAND _140_ (
    .A(_062_),
    .B(_015_),
    .Y(_063_)
  );
  NOR _141_ (
    .A(_063_),
    .B(_060_),
    .Y(_023_)
  );
  NAND _142_ (
    .A(_031_),
    .B(_067_),
    .Y(_064_)
  );
  NAND _143_ (
    .A(_064_),
    .B(_017_),
    .Y(_065_)
  );
  NOR _144_ (
    .A(_022_),
    .B(_032_),
    .Y(_066_)
  );
  NAND _145_ (
    .A(_066_),
    .B(_002_),
    .Y(_068_)
  );
  NAND _146_ (
    .A(_068_),
    .B(_065_),
    .Y(_069_)
  );
  NOR _147_ (
    .A(_069_),
    .B(_063_),
    .Y(_025_)
  );
  NOR _148_ (
    .A(_064_),
    .B(_017_),
    .Y(_070_)
  );
  NAND _149_ (
    .A(_070_),
    .B(_003_),
    .Y(_071_)
  );
  NAND _150_ (
    .A(_068_),
    .B(_020_),
    .Y(_072_)
  );
  NAND _151_ (
    .A(_072_),
    .B(_071_),
    .Y(_073_)
  );
  NOR _152_ (
    .A(_073_),
    .B(_063_),
    .Y(_027_)
  );
  NOR _153_ (
    .A(_068_),
    .B(_020_),
    .Y(_074_)
  );
  NOR _154_ (
    .A(_074_),
    .B(_018_),
    .Y(_075_)
  );
  NOR _155_ (
    .A(_071_),
    .B(_039_),
    .Y(_076_)
  );
  NOR _156_ (
    .A(_076_),
    .B(_075_),
    .Y(_077_)
  );
  NOR _157_ (
    .A(_077_),
    .B(_063_),
    .Y(_029_)
  );
  DFF _158_ (
    .C(CLOCK),
    .D(_001_[9]),
    .Q(IS)
  );
  DFF _159_ (
    .C(CLOCK),
    .D(_000_[0]),
    .Q(contador[0])
  );
  DFF _160_ (
    .C(CLOCK),
    .D(_000_[1]),
    .Q(contador[1])
  );
  DFF _161_ (
    .C(CLOCK),
    .D(_000_[2]),
    .Q(contador[2])
  );
  DFF _162_ (
    .C(CLOCK),
    .D(_000_[3]),
    .Q(contador[3])
  );
  DFF _163_ (
    .C(CLOCK),
    .D(_000_[4]),
    .Q(contador[4])
  );
  assign temp = { IS, IS, IS, IS, IS, IS, IS, IS, IS, IS };
  assign _078_ = OP[0];
  assign _079_ = OP[1];
  assign _080_ = OP[2];
  assign _081_ = OP[3];
  assign _082_ = OP[4];
  assign _083_ = OP[5];
  assign _084_ = OP[6];
  assign _085_ = OP[7];
  assign _086_ = OP[8];
  assign _087_ = OP[9];
  assign _002_ = contador[2];
  assign _039_ = contador[4];
  assign _067_ = contador[1];
  assign _003_ = contador[3];
  assign _004_ = IS;
  assign OP[0] = _005_;
  assign OP[1] = _006_;
  assign OP[2] = _007_;
  assign OP[3] = _008_;
  assign OP[4] = _009_;
  assign OP[5] = _010_;
  assign OP[6] = _011_;
  assign OP[7] = _012_;
  assign OP[8] = _013_;
  assign OP[9] = _014_;
  assign _015_ = ENABLE;
  assign _001_[9] = _016_;
  assign _000_[0] = _021_;
  assign _000_[1] = _023_;
  assign _000_[2] = _025_;
  assign _000_[3] = _027_;
  assign _000_[4] = _029_;
  assign _031_ = contador[0];
  assign _037_ = _078_;
  assign _040_ = _079_;
  assign _041_ = _080_;
  assign _043_ = _081_;
  assign _044_ = _082_;
  assign _046_ = _083_;
  assign _047_ = _084_;
  assign _049_ = _085_;
  assign _050_ = _086_;
  assign _052_ = _087_;
endmodule
